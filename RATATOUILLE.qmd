---
title: "Mini Project 3"
sidebar: false
editor_options: 
  chunk_output_type: console
---

```{r, include=FALSE, warning=FALSE}
library(readr)
library(stringr)
library(dplyr)
library(tidyr)
library(tidytext)
library(textdata)
library(ggplot2)
library(tm)
library(knitr)
library(kableExtra)
library(circlize)
library(wordcloud)
```

```{r, include=FALSE}
ratatouille <- read_csv("RATATOUILLE - Sheet1.csv")

ratatouille <- ratatouille |>
  mutate(word = str_split(RAT, "\\s+")) |>
  unnest(word)

ratatouille<-ratatouille|>
  select(word)

ratatouille<-ratatouille|>
  mutate(id = 1:7526)|>
  print(n=7526)


ratatouille|>
  distinct(word)
```

Did you know that in the Ratatouille movie, only 7,526 words were spoken? According to a Reddit [post](https://www.reddit.com/r/Screenwriting/comments/od3v7h/wordcounts_of_famous_screenplays/), the average screenplay has about 22,000 words(although Reddit is definitely not the most reliable source). Within those 7,526 words in Ratatouille, there were 2,193 distinct words spoken. This may seem like very few, but any Ratatouille lover knows how impactful those 2,193 different words were.

```{r, message=FALSE, echo=FALSE}
sentiment_scores <- ratatouille |>
  inner_join(get_sentiments("afinn"), by = "word") |>
  group_by(id) |>
  summarise(sentiment_score = sum(value))

sentiment_scores <- sentiment_scores |>
  mutate(sentiment = ifelse(sentiment_score > 0, "Positive",
                            ifelse(sentiment_score < 0, "Negative", "Neutral")))

sentiment_rat <- inner_join(ratatouille, sentiment_scores, by = "id")|>
  select(-id)

sentiment_rat<-distinct(sentiment_rat)

sentiment_rat|>
  group_by(sentiment)|>
  mutate(n_words=n())|>
  ggplot(aes(x = word, y = sentiment_score, fill = sentiment)) +
  geom_bar(stat = "identity") +
  labs(title = "Sentiment Analysis",
       x = "Words",
       y = "Score") +
  theme_minimal()+
  theme(axis.text.x = element_blank())
```

The above graph is a sentiment analysis of all of the words in Ratatouille. To find this, I used a sentiment library that ranks common words on a scale of -3 to 3, respectively negative to positive sentiment. I inner joined that dataset with my dataset of Ratatouille words to find their sentiments. We can see that a little over half of the Ratatouille words have positive connotations. This makes sense since it is overall a happy movie, although there is a lot of yelling from the head chef which would contribute to the good chunk of negativity.

Below we see a table with the 10 most used words in Ratatouille. To do this, I removed the stop words (common words that generally don't hold significance like "the") from the data and I ranked the leftover words by amount used. Unsurprisingly, we see that 3 of the words have to do with food, as it is a food movie. We also see that names/nicknames come up a lot, with Remy, Gusteau, Linguini and dad all making appearances. We see that both Gusteau and Gusteau's are on the list because R treats them like different words, but adding them together would put Gusteau to 40 occurances and in second place behind chef. Rat is also fairly expected since the whole plot of the movie is about a rat. Somewhat surprising, however, is the word hey. I would think that it would be considered a stop word, however the set of stop words I used did not include it.

```{r, echo=FALSE, message=FALSE, warning=FALSE}
distinct_rat<-ratatouille|> mutate(word=str_to_lower(word),
                     word = gsub("([[:punct:]])(?=[^[:alnum:]]*$)", "", word, perl = TRUE))|>
  count(word, sort=TRUE)|>
  anti_join(stop_words)|>
  slice(2:999)

sliced_rat<-distinct_rat|>
  slice(1:10)


kable(t(sliced_rat), format = "html")|>
  kable_styling()
```

While seeing these words is nice to get a taste for what the most used words are, it is also nice to have a more visual representation. Below is a word cloud containing the top 100 used words from the move. The bigger the word, the more it was used. By using a diagram like this, we can more easily see which words are the most commonly found, and the color codings show up what other words were used a similar amount of times.

```{r, echo=FALSE}
wordcloud(words = distinct_rat$word, freq = distinct_rat$n, min.freq = 1,
          max.words = 100, random.order = FALSE, rot.per = 0.35, 
          colors = brewer.pal(8, "Dark2"))
```

This representation can give us a lot more information about the Ratatouille movie and about what to expect to hear when watching it.


```{r}
ggplot(ratatouille, aes(x = id, fill = word)) +
  geom_histogram(binwidth = 1) +
  labs(title = "Temporal Analysis of Word Occurrences in Ratatouille",
       x = "Word Occurrence ID",
       y = "Frequency",
       fill = "Word") +
  theme_minimal()
```
