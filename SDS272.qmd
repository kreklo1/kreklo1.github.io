---
title: "McStats: Serving Up the Data on Fast Food Nutrition"
author: "Liesl Eckstrom & Mary Kreklow"
format: html
---

<iframe width="560" height="315" src="https://www.youtube.com/embed/P9ygcsKZ9ag?si=SZ19rz_NUCPLH1DK" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen>

</iframe>

## Storyboard

![](images/cdv_photo_1731509820_20241113085777.jpg)


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE)
```

```{r}
library(readr)
library(summarytools)
library(dplyr)
library(rsample)
library(parsnip)
library(tune)
library(recipes)
library(glmnet)
library(vip)
library(workflows)
library(gridExtra)
library(dials)
library(ggplot2)
library(tidymodels)
library(car)
library(tibble)
library(gridExtra)
library(tidyr)
library(knitr)
library(tidyverse)

conflicted::conflicts_prefer(mosaic::min)
conflicted::conflicts_prefer(mosaic::max)
conflicted::conflicts_prefer(dplyr::filter)

fast_food <- read_csv("fast_food.csv")|>
  dplyr::select(restaurant:protein)


fast_food$protein_source <- ifelse(grepl("burger", fast_food$item, ignore.case = TRUE), "beef",
                     ifelse(grepl("steak", fast_food$item, ignore.case = TRUE), "beef",
                     ifelse(grepl("chick", fast_food$item, ignore.case = TRUE), "chicken",
                     ifelse(grepl("tender", fast_food$item, ignore.case = TRUE), "chicken",
                     ifelse(grepl("turkey", fast_food$item, ignore.case = TRUE), "turkey",
                     ifelse(grepl("whopper", fast_food$item, ignore.case = TRUE), "beef",
                     ifelse(grepl("king", fast_food$item, ignore.case = TRUE), "beef",
                     ifelse(grepl("beef", fast_food$item, ignore.case=TRUE), "beef", "other"))))))))


```

```{r}
calories<-fast_food|>
  group_by(restaurant)|>
    summarize(avg_calories = mean(calories, na.rm = TRUE))|>
    arrange(desc(avg_calories)) |>
    mutate(restaurant = factor(restaurant, levels = restaurant))
```



## Intro

The amount of calories in the food that we eat is important. Eating over your maintenance amount of calories can alter the activity of the HPA-axis, which produces hormones, causing our bodies to have higher circulating levels of the stress hormone cortisol (George et al., 2009). Chronic overproduction of cortisol can have many adverse health effects on humans including obesity. Obesity is a rising public health issue, especially in the United States, as the occurrence rates increase (Overweight & Obesity Statistics - Niddk, n.d.). Researching obesity is important because it has high rates of comorbidity with many other very serious health issues including type 2 diabetes, hypertension, sleep apnea, arthritis, and certain types of cancer (Pi-Sunyer, 1999). A factor that can contribute to rising rates of obesity is easy access to affordable, fast, and calorie dense foods. 

Awareness of the caloric content of our food is one important way that we can make informed decisions about the meals that we eat. Fast food chains now, by law, must display the calorie count on each of their items and have nutritional information on hand if requested, but this might not be enough. Block et al., showed that people still underestimate the amount of calories in the fast food meals that they eat, especially when dining at Subway compared to McDonald's (2013). 
	
Though eating the right amount of calories is important, it is also not the whole picture. Understanding the nutritional content of the food we eat, such as, levels of protein, carbohydrate, sugar, fat, etc. is invaluable to consider, to make sure that our bodies have all the nutrients they need to function. Knowing these values may also help us make predictions about the amount of calories in our food. 

In our research we explored different nutritional factors and their relationship with the number of calories, amount of protein, and amount of carbohydrates in fast food meals. We also explored how different fast food chains compare in the amount of calories that are in their products. We hypothesize that there are significant differences between average calorie amounts at different restaurants and that there is a significant linear relationship between our response and explanatory variables. 

<br><br>  
<br><br>  

## EDA

Firstly, we checked the residuals and conditions of our data to determine if it would be appropriate for modeling because we wanted to run linear regressions. All of our response variables were generally unimodel and roughly normally distributed. The relationship between our response and explanatory variables was linear, as seen in figs. 7-9 in the appendix. We also found equal variance and normalcy in the residuals, aside from some expected high outliers. Because each observation is a menu item, we do not ancipate any issues with independence. 

```{r, out.width="70%", out.height="70%", fig.cap="This graph shows the distribution of calories across our menu items."}

ggplot(fast_food, aes(x = calories)) +
  geom_histogram(fill = "#ff61cc", color="black") +
  theme_minimal() +
  labs(title = "Distribution of Calories", x = "Calories", y = "Frequency")

```

```{r, out.width="70%", out.height="70%", fig.cap="Here we can see the distributions of calories across restaurants. We see that McDonald's leads with the highest average calories, and it also has several high outliers. Chick Fil-A has the lowest average calories. We will be looking into whether these differences are significant."}
grid1<-calories|>
  ggplot(aes(x = avg_calories, y = restaurant, fill = restaurant)) +
    geom_col() +
    theme_minimal()+
    theme(legend.position="none")+
  labs(x="Average Calories", y="Restaurant")
  

grid2<-ggplot(fast_food, aes(x=restaurant, y=calories))+
  geom_boxplot()+
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  labs(x="Restaurant", y="Average Calories")


grid.arrange(grid2,grid1,nrow=1)
```


```{r, out.width="70%", out.height="70%", fig.cap="Here, we can take a deeper dive into our data and how the restaurants are divided across protein source. This protein source column was made usings strings to group menu items with various words in their titles. This means that some items, such as those with beef but not `burger` in the name, were not classified properly and were instead sorted into the other column. We will be focusing on the beef and chicken columns for further analysis."}
fast_food|>
  ggplot(aes(x=protein_source))+
  geom_bar(aes(fill=restaurant))+
  labs(x = "Protein Source",
       y = "Count")
```


```{r}
set.seed(123)
food_split<- initial_split(fast_food)
food_train <- training(food_split)
food_test <- testing(food_split)

lasso_spec <- linear_reg(penalty = tune(), mixture = 1) |>
  set_mode("regression") |> 
  set_engine("glmnet")

food_recipe <- recipe(calories ~ cal_fat+total_fat+sat_fat+trans_fat+cholesterol+sodium+total_carb+fiber+sugar+protein, data = food_train)|>
  step_impute_mean(fiber)

  

food_wkflow<-workflow()|>
  add_recipe(food_recipe)|>
  add_model(lasso_spec)

cv_folds <- vfold_cv(food_train, v = 10)
lasso_grid <- grid_regular(penalty(range = log10(c(0.0001, 10))), levels = 20)
lasso_results <- tune_grid(
  food_wkflow,
  resamples = cv_folds,
  grid = lasso_grid,
)

sum_food<-summary(food_train)



result<-autoplot(lasso_results)

best_penalty <- select_best(lasso_results, metric = "rmse")

food_final_wf <- finalize_workflow(food_wkflow, best_penalty)
food_final_fit <- fit(food_final_wf, data = food_train)

```






## Materials and Methods

The data that we used for this project came from OpenIntro. The dataset came with more variables than we used in the analysis. We decided to remove the vitamin a, vitamin c, calcium, and salad variables, as many of them had several N/A values and we felt that the other variables would be more important to answering our research questions.

Our first task was to use models to check the relationships between different variables. We built multiple linear regression (MLR) models for predicting calories, amount of protein, and carbohydrates, which were the three variables we decided to use as response variables. Lasso regression was used to select the optimal variables for each of the models. With the lasso models, we ran cross-validation to optimize the penalty. We then ran the model with the optimized penalty to see which variables were most important to predicting the response. Variance inflation factor (VIF) values were also examined to look for and try to reduce any effects of multicollinearity in the models, so we could better understand and interpret the coefficients.  

We next wanted to look deeper into restaurants, and particularly decided to focus on calorie amounts. An ANOVA test was used to examine the significance of differences between calorie amounts across the various restaurants in the dataset. Further, a Tukey HSD test was used to dig deeper into the ANOVA's results and determine which restaurants had significantly different mean calorie amounts compared to others. 

Next, logistic regression models were used to find significant predictors of a menu item’s origin (McDonald’s vs. Not McDonald’s) and protein source (Beef vs. Chicken). 

Finally, we wanted to further examine our variables and look into any interactions that could be influencing our models and results, so we tested each of our original multiple linear regressions for interaction terms.

<br><br>  
<br><br>  


## Results

<br><br>  


**General Data Information**

The distribution of menu item calories follows a relatively normal distribution with a little bit of a right skew. The average amount of calories per menu item appears to vary depending on the restaurant, with McDonald's having the highest and Chick Fil-A having the lowest average. The relationships between calories and each of the nutrients also follow a linear pattern relatively well. We also looked into different protein sources and found that beef and chicken had the most menu items associated with them so we dive deeper into that relationship in the following analysis as well. 

<br><br>  
<br><br>  

**Variable Selection**

The Lasso regressions resulted in our three MLR models with calories, protein, and carbohydrates as the response variables. 
In the regression model for calories we find that total carbs, total fat, and protein are all very significant predictors (p < 2e-16), with trans fat (p = 0.197), cholesterol (p = 0.370), and sodium (p = 0.118) playing a supportive role in prediction. All of the variables except cholesterol were positively correlated with calories with no significant interactions. 

```{r, out.width="70%", out.height="70%", fig.cap = "This figure shows the most important variables when predicting calories. We decided to remove cal fat from the model after considering the variance inflation factor, and seeing that cal fat and total fat had concerning levels of multicollinearity. This makes sense given the relationship for the two variables, so removing this made the most sense and didn't significantly affect the model."}
set.seed(123)
food_split<- initial_split(fast_food)
food_train <- training(food_split)
food_test <- testing(food_split)

lasso_spec <- linear_reg(penalty = tune(), mixture = 1) |>
  set_mode("regression") |> 
  set_engine("glmnet")

food_recipe <- recipe(calories ~ cal_fat+total_fat+sat_fat+trans_fat+cholesterol+sodium+total_carb+fiber+sugar+protein, data = food_train)|>
  step_impute_mean(fiber)

  

food_wkflow<-workflow()|>
  add_recipe(food_recipe)|>
  add_model(lasso_spec)

cv_folds <- vfold_cv(food_train, v = 10)
lasso_grid <- grid_regular(penalty(range = log10(c(0.0001, 10))), levels = 20)
lasso_results <- tune_grid(
  food_wkflow,
  resamples = cv_folds,
  grid = lasso_grid,
)


best_penalty <- select_best(lasso_results, metric = "rmse")

food_final_wf <- finalize_workflow(food_wkflow, best_penalty)
food_final_fit <- fit(food_final_wf, data = food_train)
```


The adjusted R^2 value for this model is 0.9744, which means that 97.44% of the variability in calories can be accounted for by the variables in the model (p < 2.2e-16). 

The regression model for total carbs includes significant predictors, calories from fat, fiber, calories (p < 2e-16), protein (p = 3.00e-07), sodium (0.000304), sugar (4.13e-13), and cholesterol (2.51e-07). All of the variables in the model were positively correlated with total carbs except protein, calories from fat, and cholesterol. The adjusted R^2 value for this model is 0.8956 which means that 89.56% of variability in total carbohydrates can be explained by the variables in the model (p  < 2.2e-16). The original lasso model included all variables, but multicollinearity issues led us to remove total_fat, trans_fat, and sat_fat.

```{r}
total_carb_mlr<-lm(total_carb ~ protein + sat_fat + cal_fat + total_fat+ sodium+fiber+calories+trans_fat+sugar+cholesterol, data=fast_food)

small_carb_mlr<-lm(total_carb ~ protein  + cal_fat + sodium+fiber+calories+sugar+cholesterol, data=fast_food)

carb_compare<-anova(total_carb_mlr, small_carb_mlr)
kable(carb_compare, caption = "The figure below shows the results of our ANOVA, which we ran to see if the full model was significantly more accurate than our reduced multicollinearity model.")
```



In the regression model for predicting protein we find that calories from fat, sodium, cholesterol, and calories are significant predictors of protein (p < 2e-16), as well as total carb (p = 1.74e-08) and saturated fat (p = 8.44e-07), with fiber playing a supporting role (p = 0.452). We ran into additional multicollinearity issues between variables, so decided to look deeper into potential reduction.

```{r}
protein_mlr <- lm(protein ~ total_carb + sat_fat + cal_fat + sodium+fiber+calories+cholesterol, data=fast_food)

#We see very high correlation between the fats
protein_mlr_smaller<- lm(protein ~ total_carb + sat_fat + calories+ sodium+fiber+cholesterol, data=fast_food)

anove<-anova(protein_mlr, protein_mlr_smaller)
kable(anove, caption="We once again perform an ANOVA test with our optimized lasso and our reduced multicollinearity model.")
#full model is significantly better
```

Here we see a p value of nearly 0, well below our threshold. Because we are trying to find the best model and are not as worried about interpretations of individual variables at this time, we chose to use the larger model, which can more accurately predict protein levels. The adjusted R^2 value for this model is 0.9201. This means that 92.01% of the variability in protein can be explained by the variables in the model (p  < 2.2e-16). 

<br><br>  
<br><br>  


**Interactions**

We also wanted to look into potential interactions in our model, as we know that often times nutritional values have relationships that might not be obvious. 

```{r, fig.cap="This matrix of scatterplots shows us the significant interactions in our MLR model for predicting protein."}
again <- lm(
  protein ~ calories + fiber + total_carb + total_fat + sodium + sugar + cholesterol,
  data = fast_food)


#decided to focus on calories, total_carb, total_fat, sodium, and cholesterol

again_model <- lm(protein ~ calories + total_fat + total_carb + sodium + cholesterol,
                  data = fast_food)

again_interaction<-lm(protein ~ calories * total_fat + calories * total_carb + calories * sodium + calories * cholesterol + total_fat * total_carb + total_fat * sodium + total_fat * total_carb * sodium + total_carb * cholesterol + sodium * cholesterol, 
                         data = fast_food)

more_interaction<-lm(protein ~ calories + total_fat + total_carb + sodium + cholesterol + calories:total_carb,
                         data = fast_food)
#summary(more_interaction)

moree_interaction<-lm(protein ~ calories + total_fat + total_carb + sodium + cholesterol + calories:sodium,
                         data = fast_food)
#summary(moree_interaction)

moreee_interaction<-lm(protein ~ calories + total_fat + total_carb + sodium + cholesterol + calories:cholesterol,
                         data = fast_food)

#summary(moreee_interaction)

moreeee_interaction<-lm(protein ~ calories + total_fat + total_carb + sodium + cholesterol + total_fat:sodium,
                         data = fast_food)
#summary(moreeee_interaction)

moreeeee_interaction<-lm(protein ~ calories + total_fat + total_carb + sodium + cholesterol + sodium:cholesterol,
                         data = fast_food)
#summary(moreeeee_interaction)



interaction_model <- lm(protein ~ calories * total_carb, data = fast_food)
#summary(interaction_model)


new_data <- expand.grid(
  calories = seq(min(fast_food$calories, na.rm = TRUE), 
                 max(fast_food$calories, na.rm = TRUE), 
                 length.out = 100),
  total_carb = seq(min(fast_food$total_carb, na.rm = TRUE), 
                   max(fast_food$total_carb, na.rm = TRUE), 
                   length.out = 5) 
)

new_data$predicted_protein <- predict(interaction_model, new_data)

gg1<-ggplot(data = fast_food, aes(x = calories, y = protein)) +
  geom_point(alpha = 0.5) + 
  geom_line(data = new_data, aes(x = calories, y = predicted_protein, color = as.factor(total_carb)), size = 1)+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  labs(x="Calories", y="Protein", color="Total Carb Level")





interaction_model <- lm(protein ~ calories * sodium, data = fast_food)
#summary(interaction_model)


new_data <- expand.grid(
  calories = seq(min(fast_food$calories, na.rm = TRUE), 
                 max(fast_food$calories, na.rm = TRUE), 
                 length.out = 100),
  sodium = seq(min(fast_food$sodium, na.rm = TRUE), 
                   max(fast_food$sodium, na.rm = TRUE), 
                   length.out = 5) 
)

new_data$predicted_protein <- predict(interaction_model, new_data)

gg2<-ggplot(data = fast_food, aes(x = calories, y = protein)) +
  geom_point(alpha = 0.5) + 
  geom_line(data = new_data, aes(x = calories, y = predicted_protein, color = as.factor(sodium)), size = 1)+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  labs(x="Calories", y="Protein", color="Sodium Level")






interaction_model <- lm(protein ~ total_fat * sodium, data = fast_food)
#summary(interaction_model)


new_data <- expand.grid(
  total_fat = seq(min(fast_food$total_fat, na.rm = TRUE), 
                 max(fast_food$total_fat, na.rm = TRUE), 
                 length.out = 100),
  sodium = seq(min(fast_food$sodium, na.rm = TRUE), 
                   max(fast_food$sodium, na.rm = TRUE), 
                   length.out = 5) 
)

new_data$predicted_protein <- predict(interaction_model, new_data)

gg3<-ggplot(data = fast_food, aes(x = total_fat, y = protein)) +
  geom_point(alpha = 0.5) + 
  geom_line(data = new_data, aes(x = total_fat, y = predicted_protein, color = as.factor(sodium)), size = 1)+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  labs(x="Total Fat", y="Protein", color="Sodium Level")






interaction_model <- lm(protein ~ sodium * cholesterol, data = fast_food)
#summary(interaction_model)

new_data <- expand.grid(
  sodium = seq(min(fast_food$sodium, na.rm = TRUE), 
                 max(fast_food$sodium, na.rm = TRUE), 
                 length.out = 100),
  cholesterol = seq(min(fast_food$cholesterol, na.rm = TRUE), 
                   max(fast_food$cholesterol, na.rm = TRUE), 
                   length.out = 5) 
)

new_data$predicted_protein <- predict(interaction_model, new_data)

gg4<-ggplot(data = fast_food, aes(x = sodium, y = protein)) +
  geom_point(alpha = 0.5) + 
  geom_line(data = new_data, aes(x = sodium, y = predicted_protein, color = as.factor(cholesterol)), size = 1)+
  theme(axis.text.x = element_text(angle = 45, hjust = 1))+
  labs(x="Sodium", y="Protein", color="Cholesterol Level")



grid.arrange(gg1,gg2,gg3,gg4, ncol=2)

```


There are interactions between calories and total carbs, calories and sodium, total fat and sodium, and sodium and cholesterol. As we can see, higher levels of all of these interaction terms lead to higher slopes of the regression, meaning that they positively affect the relationship.


**Calorie Levels across Restaurants**

The results of our analysis of variance (ANOVA) for differences in average calories across all restaurants was significant (F-value = 6.085, p = 7.75e-07).

```{r, out.width="50%", out.height="50%"}
anova <- aov(calories ~ restaurant, data = fast_food)
k<-summary(anova)

#boxplot(calories ~ restaurant, data = fast_food)

tukey_result <- TukeyHSD(anova)

tukey<-tidy(tukey_result)

tukeyy<-tukey|>
  filter(adj.p.value<0.05)|>
  select(-null.value, -term)|>
  rename(
    Restaurants = contrast,
    `Adjusted P Value` = adj.p.value,
    Estimate = estimate,        
    `Lower Confidence Level` = conf.low,  
    `Upper Confidence Level` = conf.high 
  )


kable(tukeyy, caption="To look further into the differences present we performed a Tukey HSD test and found which restaurants had significantly different average calorie amounts.")
```


We found that there are significant differences between Chick Fil-A and Burger King (p = 0.00770), Taco Bell and Burger King (p = 0.00198), McDonald’s and Chick Fil-A (p = 0.00178), Sonic and Chick Fil-A (p = 0.00360), Taco Bell and McDonalds (p = 0.000287), and Taco Bell and Sonic (p = 0.00102). We can be 95% confident that the average calorie difference between Chick Fil-A and Burger King is between -412.46 and -35.79, the difference between Taco Bell and Burger King is between -290.94 and -38.89, the difference between McDonald’s and Chick Fil-A is between 61.69 and 450.13, the difference between Sonic and Chick Fil-A is between 50.69 and 433.81, the difference between Taco Bell and McDonalds is between -331.36 and -62.04, and finally, the difference between Taco Bell and Sonic is between -326.07 and -50.03. We can see that in general, Chick Fil-a and Taco Bell have lower average calorie counts than many of the other restaurants, showing a significant contrast, and McDonalds has a significantly higher calorie count than a few restaurants.

<br><br>  



**Logistic Regression**

Our last statistical test was logistic regression with binary variables. The first logistic model we created was to calculate the odds of an item being from McDonald’s or not McDonald’s. Our significant predictors were protein (p = 0.000222), fiber (p = 0.000669), and sugar (p = 0.002798). Our findings are presented below:

*For every 1g increase in protein, the odds that the item is from McDonald's rises by 13% when all other variables are held constant. *

*For every 1g increase in fiber, the odds the item is from McDonald's as opposed to other fast food restaurants decreases by about 26.5% when all other variables are held constant. *

*For every 1g increase in sugar, the odds the item is from McDonald's increase by about 8.6% when all other variables are held constant. *

Our other logistic model was calculating the odds that an item’s protein source was beef vs. chicken. The significant predictors were protein (p = 6.63e-05) and cholesterol (p = 0.000479). We once again present odds ratios for each significant predictor:

*For every 1g increase in protein, the odds the item is beef rather than chicken decrease by about 12.6% when holding all other variables constant.* 

*For every 1g increase in cholesterol, the odds that item is beef rather than chicken increase by about 4% holding all other variables constant.*





```{r}
fast_food<-fast_food|>
  mutate(mcdonalds=ifelse(restaurant == "McDonald's", 1, 0))

fast_food<-fast_food|>
  filter(protein_source=="beef"|protein_source=="chicken")|>
  mutate(beef=ifelse(protein_source == "beef", 1, 0))

fast_food<-fast_food|>
  mutate(mcdonalds=as.factor(mcdonalds))


fast_food_centered<-fast_food|>
    mutate(calories_centered = calories - 531)

mcdonalds <- glm(mcdonalds ~ total_carb + protein + total_fat+ sodium+fiber+calories+sugar+cholesterol, family = binomial(link="logit"), data = fast_food_centered)
mcd<-summary(mcdonalds)
odds_ratio<-exp(mcdonalds$coefficients) ##Odds ratios

fast_food<-fast_food|>
  mutate(mcdonalds=ifelse(restaurant == "McDonald's", 1, 0))

fast_food<-fast_food|>
  mutate(mcdonalds=as.factor(mcdonalds))

fast_food_centered<-fast_food|>
    mutate(calories_centered = calories - 531)



beef <- glm(beef ~ total_carb + protein + total_fat+ sodium+fiber+calories+sugar+cholesterol, family = binomial(link="logit"), data = fast_food)
beef<-summary(beef)
odds_rate <- exp(beef$coefficients)[, "Estimate"]
```



<br><br>  


## Discussion

Calories are an important statistic to look at when we make decisions about the food we eat, but it is also important to look at the rest of the label to know that our bodies are getting the nutrients that they need to function. Our goals were to find ways to predict calories, protein, and total carbohydrates in fast food meals. The linear regression models that we developed work effectively to do this. These models can help us understand the relationships between different nutrition variables which in turn helps us understand and make better decisions about the meals we eat. Our ANOVA tests can also help people make decisions about which fast food restaurants to eat at based on the average amount of calories in the meals. Our logistic regression models can also be helpful in decision making of menu items and their main protein source. 

These findings can aid consumers in making healthier and more informed decisions about fast food consumption as we see in the literature that it is not common for people to know what and how much they are eating at fast food restaurants. These results can be generalized to the restaurants in the study, but not outside that scope. Since the restaurants in this study are nationwide chains consumers across the United States can use this information to decide where to eat out. 

One important limitation of this study is the lack of data for fiber. Since the dataset is already small and some of the values were missing we had to replace the missing values with the mean for the column since it was an important factor. There were also a lot of values missing for the vitamin columns so we had to remove them from the dataset even though they could be valuable predictors. 
	
Some important steps for future researchers in the field to take are collecting more data. This means less NA values, more restaurants and also more menu items. Something that was disappointing about the dataset we used was that there were no sides, drinks, or deserts represented, especially since it is uncommon to go to fast food restaurants and order only an entrée. There was also no serving sizes, and we noticed that some of our items were way larger portions than others, and very unlikely to be eaten in one sitting. Having nutrition information for servings could be really helpful and a great addition to the dataset. The addition and use of these new data points and variables would be really beneficial for creating even more robust models. 



## Appendix

```{r}
hotel_table <- fast_food |>
  summarise(across(everything(), ~class(.))) |>
  pivot_longer(cols = everything(), names_to = "Variable", values_to = "Type") |>
  mutate(
    `Response/Explanatory` = if_else(Variable %in% c("calories", "protein", "total_carb"), "Response", "Explanatory"))

kable(hotel_table, caption="Here we have a table of all the variables we are using from this dataset. You can see the variable name, type, and whether we are using it as a response or explanatory. Note that for the response variables, when it is not being used as a response it is used as an explanatory variable.")

```

```{r, fig.cap="This graph shows difference in calories between beef and chicken. We see that the average calorie levels are very similar, but chicken does seem to have several outliers. This could be due to the large portion sizes in some of the menu items."}
ggplot(fast_food, aes(x=protein_source, y=calories))+
  geom_boxplot()

```

<br><br>  
<br><br>  

<br><br>  



```{r, fig.cap="Here we see the average nutrient amounts by restaurant. This can give us a better idea of which restaurants tend to have the highest or lowest levels for different nutrients."}
restaurant_summary <- fast_food |>
  group_by(restaurant) |>
  summarise(across(c(calories, total_fat, sat_fat, trans_fat, cholesterol, sodium, total_carb, fiber, sugar, protein), 
                   mean, na.rm = TRUE)) |>
  pivot_longer(cols = -restaurant, names_to = "nutrient", values_to = "average")

ggplot(restaurant_summary, aes(x = restaurant, y = average, fill = restaurant)) +
  geom_col(position = "dodge") +
  scale_fill_discrete(name = "Restaurant") +  
  theme_minimal() +
  labs(title = "Average Nutrient Amounts by Restaurant", x=NULL, y = "Average Amount") +
  facet_wrap(~ nutrient, scales = "free_y") +
  theme(axis.text.x = element_blank(),         
        legend.position = "right")             

```

```{r, fig.cap="Here we see the relationship between a selection of nutrients and calories. All of these have a positive relationship, but some seem to be stronger correlations."}
restaurant_summary_long <- fast_food |>
  pivot_longer(cols = c(cal_fat, total_carb, protein, cholesterol), 
               names_to = "nutrient", values_to = "average")

ggplot(restaurant_summary_long, aes(x = calories, y = average, color = nutrient)) +
  geom_point(size = 3) +
  theme_minimal() +
  labs(title = "Calories vs Nutrients", x = "Calories", y = "Average Nutrient Amount") +
  facet_wrap(~ nutrient, scales="free_y") 
```


```{r, fig.cap="Here we see the relationship between a selection of nutrients and protein. All of these have a positive relationship, but some seem to be stronger correlations."}
restaurant_summary_long <- fast_food |>
  pivot_longer(cols = c(cal_fat, total_carb, calories, cholesterol), 
               names_to = "nutrient", values_to = "average")

ggplot(restaurant_summary_long, aes(x = protein, y = average, color = nutrient)) +
  geom_point(size = 3) +
  theme_minimal() +
  labs(title = "Protein vs Nutrients", x = "Protein", y = "Average Nutrient Amount") +
  facet_wrap(~ nutrient, scales="free_y") 
```


```{r, fig.cap="Here we see the relationship between a selection of nutrients and carbohydrates. All of these have a positive relationship, but some seem to be stronger correlations."}
restaurant_summary_long <- fast_food |>
  pivot_longer(cols = c(cal_fat, protein, calories, cholesterol), 
               names_to = "nutrient", values_to = "average")

ggplot(restaurant_summary_long, aes(x = total_carb, y = average, color = nutrient)) +
  geom_point(size = 3) +
  theme_minimal() +
  labs(title = "Carbohydrates vs Nutrients", x = "Carbohydrates", y = "Average Nutrient Amount") +
  facet_wrap(~ nutrient, scales="free_y") 
```

