---
title: "R Tip of the Day"
sidebar: false
editor_options: 
  chunk_output_type: console
---

### Circlize Package

The circlize package is very helpful in displaying data circularly. This can allow up to stack different types of charts about the same data, as shown below, and it also has many benefits pertaining to looking at connections between variables.

```{r, echo=FALSE, warning=FALSE, message=FALSE}
library(circlize)
set.seed(999)
n = 1000
df = data.frame(sectors = sample(letters[1:8], n, replace = TRUE),
    x = rnorm(n), y = runif(n))

circos.initialize(df$sectors, x = df$x)

circos.track(df$sectors, y = df$y,
    panel.fun = function(x, y) {
        circos.text(CELL_META$xcenter, 
            CELL_META$cell.ylim[2] + mm_y(5), 
            CELL_META$sector.index)
        circos.axis(labels.cex = 0.6)
})

col = rep(c("#ff1493", "#fc0fc0"), 4)
circos.trackPoints(df$sectors, df$x, df$y, col = col, pch = 16, cex = 0.5)
circos.text(-1, 0.5, "text", sector.index = "a", track.index = 1)

bgcol = rep(c("#EFEFEF", "#CCCCCC"), 4)

circos.trackHist(df$sectors, df$x, bin.size = 0.2, bg.col = bgcol, col = NA)

circos.track(df$sectors, x = df$x, y = df$y,
    panel.fun = function(x, y) {
        ind = sample(length(x), 10)
        x2 = x[ind]
        y2 = y[ind]
        od = order(x2)
        circos.lines(x2[od], y2[od])})


circos.track(ylim = c(0, 1), panel.fun = function(x, y) {
    xlim = CELL_META$xlim
    ylim = CELL_META$ylim
    breaks = seq(xlim[1], xlim[2], by = 0.1)
    n_breaks = length(breaks)
    circos.rect(breaks[-n_breaks], rep(ylim[1], n_breaks - 1),
                breaks[-1], rep(ylim[2], n_breaks - 1),
              col = rand_color(n_breaks), border = NA)})

circos.link("a", 0, "b", 0, h = 0.4)
circos.link("c", c(-0.5, 0.5), "d", c(-0.5,0.5), col = "hotpink",
    border = "pink", h = 0.2)
circos.link("e", 0, "g", c(-1,1), col = "lightpink2", border = "black", lwd = 2, lty = 2)
```

```{r, include=FALSE}
circos.clear()
```

This next chart is just an example of how one might facet these charts. You can, of course, have multiple circles that all display data and charts, however for this example I choose to just play with their colors and brightness.

```{r, echo=FALSE}
par(mar = c(1, 1, 1, 1))
plot(NULL, xlim = c(1, 10), ylim = c(1, 8), axes = FALSE, ann = FALSE)
points(1:10, rep(1, 10), pch = 16, cex = 5, 
    col = rand_color(10, luminosity = "random"))
points(1:10, rep(2, 10), pch = 16, cex = 5, 
    col = rand_color(10, luminosity = "bright"))
points(1:10, rep(3, 10), pch = 16, cex = 5, 
    col = rand_color(10, luminosity = "light"))
points(1:10, rep(4, 10), pch = 16, cex = 5, 
    col = rand_color(10, luminosity = "dark"))
points(1:10, rep(5, 10), pch = 16, cex = 5, 
    col = rand_color(10, hue = "red", luminosity = "bright"))
points(1:10, rep(6, 10), pch = 16, cex = 5, 
    col = rand_color(10, hue = "green", luminosity = "bright"))
points(1:10, rep(7, 10), pch = 16, cex = 5, 
    col = rand_color(10, hue = "blue", luminosity = "bright"))
points(1:10, rep(8, 10), pch = 16, cex = 5, 
    col = rand_color(10, hue = "monochrome", luminosity = "bright"))
```

While the first two graphs were just playing around with the package with random variables, this last graph is a real world example of how the circlize package might be used. The World Phones dataset shows the amount of phones in different regions of the world throughout a few years. I am using it with the chordDiagram function to show the relationship between the regions and years where there were phones.

```` r
```{r}
# Load circlize package
library(circlize)

# Load WorldPhones dataset
data("WorldPhones")

# Create a circular plot
chordDiagram(WorldPhones, transparency = 0.5)
```
````

```{r, echo=FALSE}
# Load circlize package
library(circlize)

# Load WorldPhones dataset
data("WorldPhones")

# Create a circular plot
chordDiagram(WorldPhones, transparency = 0.5)

```

For more information, this [link](https://docs.google.com/presentation/d/17nzNtH0aQIC3E4HMi8CHmco88JRg5UrtQaihstgQ_sE/edit?usp=sharing) will take you to a presentation overview of the circlize dataset and some of its uses.
